<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F2019%2F03%2F19%2F%E5%BC%80%E2%80%9C%E6%9B%B4%E2%80%9D%E5%A4%A7%E5%90%89%2F</url>
    <content type="text"><![CDATA[我的个人博客​ 从今天起，本站就作为本人的个人博客使用啦。 ​ 以前总是会在各种博客上看到对自己很有用的“脱坑指南”，心里对这些大神甚是敬仰，所以自己也是不止一次动过写博客的念头。甚至，自己还开通了微信公众号，尝试着写下自己的生活经历，还有学习以及项目上遇到的一些问题，真是羞愧。。。公众号目前只发出过一篇文章，而且还不是关于项目的，其他都还在素材库里安静地躺着。 缘起​ 虽然很菜吧，但是写博客的心还是一直有的！直到有一天，在学习github使用的时候，接触到了几篇博客，其中一个博主（点我膜拜）做的博客界面实在是太赞了！就是那种一见钟情的感觉，瞬间就被美到了！界面简洁，没有广告，整体显得也很大气，很“高端”。原谅我语文功底太差，遇见这种情形，会用的形容词就这么几个!。然后自己就一发不可收拾了。 情深​ 见了一面，就陷进去了。然后自己大致了解了一下基于Hexo静态博客的大致原理，就吭哧吭哧搞起来了，几乎整整两天时间。虽然后续还有不少要维护和美化的，但搞到现在这种程度，着实难为一个底层“硅农”了！曾经自己一度还想着：“怎么也要一步到位，将自己的博客做到那种非常高端酷炫大气的境界，然后推出自己的第一篇文章来”。理智还是获胜了，搞成那样的话，估计我又得扔进去几天。干脆先扔上来一个瞎bb的文章，来给自己的站点开个光。 ​ Hexo是一个静态博客（网页）的生成工具，然后其搭配github或者codinghub的话，就可以实现将自己的静态博客托管到上边，而不需要定期维护，或者交付费用，接收广告啥的。关键是界面漂亮！Hexo在github上用户很广，所以有很多主题可以去选择，不过我最喜欢的还是这个Next的简洁版本了，干干净净的，很舒服。有一点需要吐槽的就是，主题做定制的时候，用户接口竟然是直接去修改代码！！让一个没有做过前端开发的人实在头疼，还好有各种教程贴的神助攻。 ​ 下面总结一下博客搭建以及定制美化的过程。（好多坑） 安装Git，安装Node.js，安装hexo 参考这个 坑1：Node.js最好选择默认安装路径，不然会有环境变量的问题，导致npm这个包管理工具在git_bash中找不到命令，后续所有步骤都会受影响。 建个人仓，关联github 坑2：有个ssh公钥的问题。这个需要在github个人仓里的setting添加，而且后续在本地端git_bash中连接调试的时候，如果报错，是因为少生成了一个文件。这时候在命令行里人家问(Yes/No)?一定要记得敲Yes，会把这个缺失的文件补上，后续的连接和文章部署才不会出问题。 hexo基本配置，主题更换以及定制和美化 坑max：这是最耗费时间的地方，尤其是对于前端白痴加强迫症的我来说。坑太多，所以就不一一总结了。反正让我吃惊的是，细节到，菜单栏的每一项，网站的每一个功能，比如：站点访问人数统计，文章访问统计，评论功能开通，还有其他美化的地方，竟然都需要深入到底层去改css代码。真是刺激…… Markdown文件编辑器Typora 坑4：hexo文章发布的都是.md格式的文件，自己这两天学了一下，感觉这种写作方式真是不错，不用鼠标点来点去了，直接上手敲。结合这款Typora工具，体验还不错。但是！！就在写这个有序列表的时候，我发现自己出不去了，不能进入下一个无格式的段落了。真是醉了，打开源代码窗口，把之前的段落标记符，复制到下一段的段首就可以退出列表了。或者直接点下一行应该也可以。 ​ 折腾了将近两天，发现一总结就上面三段，真是羞愧。关键是，自己没有中间过程留图的习惯，所以内容感觉“有点湿”。反正主要看的人还是自己吧。。。。 定终身​ 既然说了这是给未来自己的一份礼物，所以基本就不会停更了。陆续会把自己的个人总结还有项目经历放上来，学习笔记也会放一些。关键是用markdown格式写学习笔记真的是太舒服了！！ ​ 除了更新博客外，主题界面还会再做一些小修改。比如背景图片轮播、代码段格式、以及文章格式优化。其他的花里胡哨的，特效一类的，不折腾，拉低自己的level。哈哈. ​ 还有hexo本地的一些配置，github上这个仓分支的建立，以实现多台电脑维护个人博客。后续都搞起来。 总结​ 希望这个小网站能成为自己的一个小助力，但愿自己能在不务正业成为大神的道路上越走越远！]]></content>
  </entry>
</search>
